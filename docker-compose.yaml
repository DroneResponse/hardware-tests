version: "3"
services:
  roscore:
    image: ros:noetic-ros-core
    command: stdbuf -o L roscore
    restart: always

  mavros:
    build: ./mavros/
    depends_on:
      - roscore
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    restart: always

  arm:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "arm.py"]

  box:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "box.py"]

  geofence:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "geofence.py"]

  gimbal:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "gimbal.py"]

  hover:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "hover.py"]

  indoor_sensors:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "indoor_sensors.py"]

  rc_failsafe:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "rc_failsafe.py"]

  sensors:
    build: .
    depends_on:
      - roscore
      - mavros
    environment:
      - "ROS_MASTER_URI=http://roscore:11311"
    command: ["stdbuf", "--output=L", "rosrun", "dr_hardware_tests", "sensors.py"]
